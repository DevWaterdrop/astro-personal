---
import clsx from 'clsx';
import About from './About.astro';
import Background from './Background.astro';

const sectionClass = clsx(
  'mx-auto max-w-screen-2xl px-6 pt-28 pb-12 relative overflow-hidden',
  'flex flex-col justify-between',
  'bg-white',
  'sm:px-12 sm:pt-48 sm:pb-24',
  'max-h-[52rem] h-[min(100vh, 100%)]'
);
---

<section class={sectionClass}>
  <div class="flex flex-col gap-[5%] justify-between md:flex-row">
    <div class="h-max mb-28 w-fit relative md:mb-0">
      <h1 class="flex flex-col z-10 pointer-events-none relative">
        <span class="font-extrabold text-4.5xl lg:text-5xl"
          >Hello, I&apos;m ðŸ‘‹
        </span>
        <span class="font-extrabold text-4.5xl lg:text-5xl"
          >Hurevych Kostiantyn
        </span>
        <span class="font-bold text-blue--dark text-xl lg:text-2xl"
          >Software engineer
        </span>
      </h1>
      <img
        id="go-background"
        class="opacity-[0.15] top-3/4 left-8 w-60 -rotate-10 select-none pointer-events-none absolute sm:top-2/3 sm:w-80"
        src="./images/go-docker.png"
        alt="golang & docker"
        loading="lazy"
      />
      <Background />
    </div>
    <About />
  </div>
</section>

<script>
  import anime from 'animejs';

  (() => {
    const target = document.querySelector('#go-background');

    if (!target || !(target instanceof HTMLImageElement) || target.complete) {
      return;
    }

    // only if img cached or not found
    target.onload = () => {
      anime({
        targets: target,
        opacity: [0, 0.15],
        easing: 'easeInOutQuad',
        duration: 300,
      });
    };
    return;
  })();
</script>
